[{"/home/ktulu27/dev/mesto-react/src/reportWebVitals.js":"1","/home/ktulu27/dev/mesto-react/src/index.js":"2","/home/ktulu27/dev/mesto-react/src/components/Main.js":"3","/home/ktulu27/dev/mesto-react/src/components/App.js":"4","/home/ktulu27/dev/mesto-react/src/components/Card.js":"5","/home/ktulu27/dev/mesto-react/src/components/ImagePopup.js":"6","/home/ktulu27/dev/mesto-react/src/utils/api.js":"7"},{"size":362,"mtime":1607199852905,"results":"8","hashOfConfig":"9"},{"size":507,"mtime":1607587567480,"results":"10","hashOfConfig":"9"},{"size":2357,"mtime":1607590774002,"results":"11","hashOfConfig":"9"},{"size":4819,"mtime":1607590924759,"results":"12","hashOfConfig":"9"},{"size":796,"mtime":1607588670717,"results":"13","hashOfConfig":"9"},{"size":660,"mtime":1607588919482,"results":"14","hashOfConfig":"9"},{"size":4121,"mtime":1607413817732,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ys6e1v",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/ktulu27/dev/mesto-react/src/reportWebVitals.js",[],"/home/ktulu27/dev/mesto-react/src/index.js",[],"/home/ktulu27/dev/mesto-react/src/components/Main.js",["31"],"/home/ktulu27/dev/mesto-react/src/components/App.js",["32","33"],"/home/ktulu27/dev/mesto-react/src/components/Card.js",[],"/home/ktulu27/dev/mesto-react/src/components/ImagePopup.js",[],"/home/ktulu27/dev/mesto-react/src/utils/api.js",["34","35","36","37","38","39","40","41","42","43","44","45"],"class Api {\n  constructor(url, headers) {\n    this.url = url;\n    this.headers = headers;\n  }\n \n  \n\n  //ЭТОТ МЕТОД РАБОТАЕТ\n  getInitialCards() {\n    console.log(`${this.url}`+\"cards\")\n    return fetch(`${this.url}`+\"cards\", {\n      headers: this.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(\"Запрос не выполнен\", err);\n    });\n  }\n\n  //ЭТОТМЕТОД РАБОТАЕТ\n  addNewCard({ name, link }) {\n    \n    return fetch(`${this.url}`+\"cards\", {\n      method: \"POST\",\n      \n\n      headers: this.headers\n      ,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n\n      .catch((err) => {\n        console.log(\"Запрос не выполнен\", err);\n      });\n  }\n\n  deleteCard(cardId) {\n    return fetch(\n     \n      `${this.url}`+\"cards/\"+`${cardId}`,\n      {\n        method: \"DELETE\",\n\n        headers: this.headers,\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n\n      .catch((err) => {\n        console.log(\"Запрос не выполнен\", err);\n      });\n  }\n\n  likeCard(cardId) {\n    return fetch(\n      \n      `${this.url}`+ \"cards/likes/\" + `${cardId}`,\n      {\n        method: \"PUT\",\n\n        headers: this.headers,\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n\n      .catch((err) => {\n        console.log(\"Запрос не выполнен\", err);\n      });\n  }\n\n  dislikeCard(cardId) {\n    return fetch(\n      `${this.url}`+\"cards/likes/\"+ `${cardId}`,\n      {\n        method: \"DELETE\",\n\n        headers: this.headers,\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n\n      .catch((err) => {\n        console.log(\"Запрос не выполнен\", err);\n      });\n  }\n\n  updateUserAvatar(url) {\n    return fetch(\n      `${this.url}` +\"users/me/avatar\",\n      {\n        method: \"PATCH\",\n        headers: this.headers,\n        body: JSON.stringify({\n          avatar: url,\n        }),\n      }\n    ).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(\"Запрос не выполнен\", err);\n    });\n  }\n\n  getProfileInfo() {\n    return fetch(`${this.url}` + \"users/me\", {\n      method: \"GET\",\n      headers: this.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    })\n    .catch((err) => {\n      console.log(\"Запрос не выполнен\", err);\n    });\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this.url}` + \"users/me\", {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    })\n    .catch((err) => {\n      console.log(\"Запрос не выполнен\", err);\n    });\n  }\n}\n\n\nconst urlData = \"https://mesto.nomoreparties.co/v1/cohort-17/\";\nconst headersData = {\n  authorization: \"c9722db9-3ef8-471a-a8fd-61097de987b4\",\n  \"Content-Type\": \"application/json\",\n};\n\nconst api = new Api(urlData, headersData);\n\n\n\n\nexport default api;\n",{"ruleId":"46","severity":1,"message":"47","line":1,"column":10,"nodeType":"48","messageId":"49","endLine":1,"endColumn":16},{"ruleId":"46","severity":1,"message":"50","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"51","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":11,"column":30,"nodeType":"54","messageId":"55","endLine":11,"endColumn":31},{"ruleId":"52","severity":1,"message":"53","line":12,"column":31,"nodeType":"54","messageId":"55","endLine":12,"endColumn":32},{"ruleId":"52","severity":1,"message":"53","line":30,"column":31,"nodeType":"54","messageId":"55","endLine":30,"endColumn":32},{"ruleId":"52","severity":1,"message":"53","line":57,"column":20,"nodeType":"54","messageId":"55","endLine":57,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":57,"column":29,"nodeType":"54","messageId":"55","endLine":57,"endColumn":30},{"ruleId":"52","severity":1,"message":"53","line":80,"column":20,"nodeType":"54","messageId":"55","endLine":80,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":80,"column":37,"nodeType":"54","messageId":"55","endLine":80,"endColumn":38},{"ruleId":"52","severity":1,"message":"53","line":102,"column":20,"nodeType":"54","messageId":"55","endLine":102,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":102,"column":35,"nodeType":"54","messageId":"55","endLine":102,"endColumn":36},{"ruleId":"52","severity":1,"message":"53","line":124,"column":21,"nodeType":"54","messageId":"55","endLine":124,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":145,"column":32,"nodeType":"54","messageId":"55","endLine":145,"endColumn":33},{"ruleId":"52","severity":1,"message":"53","line":162,"column":32,"nodeType":"54","messageId":"55","endLine":162,"endColumn":33},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'logo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]